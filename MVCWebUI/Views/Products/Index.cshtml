@*@model List<ProductModel>*@
@model IEnumerable<ProductModel>

@*<a href="/Products/Create">Create New Products</a>*@
@Html.ActionLink("Create New Product", "Create", "Products")

@{
	string title = "Products";
	ViewData["Title"] = title;
}

<h1>@title</h1>
<hr />
@if (TempData["Message"] is not null)
{
	if (TempData["Message"].ToString().EndsWith("!"))
	{
		<p class="text-danger">@TempData["Message"]</p>
	}
	else
	{
		<p class="text-success">@TempData["Message"]</p>
	}
}
<table class="table table-striped">
	<tr>
		<th>
			@*Name*@
			@Html.DisplayNameFor(model => model.Name)
		</th>
		<th>
			@*Unit Price*@
			@Html.DisplayNameFor(model => model.UnitPriceDisplay) 
		</th>
		<th>
			@*Stock Amount*@
			@Html.DisplayNameFor(model => model.StockAmount)
		</th>
		<th>
			@*Expiration Date*@
			@Html.DisplayNameFor(model => model.ExpirationDateDisplay)
		</th>
		<th>
			@*Category*@
			@Html.DisplayNameFor(model => model.CategoryNameDisplay)
		</th>
		<th>

		</th>
	</tr>
	@foreach (var product in Model)
	{
		<tr>
			<td>
				@*@product.Name*@
				@Html.DisplayFor(model => product.Name)
			</td>
			<td>
				@*@product.UnitPriceDisplay*@
				@Html.DisplayFor(model => product.UnitPriceDisplay)
			</td>
			<td>
				@*@product.StockAmount*@
				@Html.DisplayFor(model => product.StockAmount)
			</td>
			<td>
				@*@product.ExpirationDateDisplay*@
				@Html.DisplayFor(model => product.ExpirationDateDisplay)
			</td>
			<td>
				@*@product.CategoryNameDisplay*@
				@Html.DisplayFor(model => product.CategoryNameDisplay)
			</td>
			<td>
				<a asp-action="Details" asp-route-id="@product.Id">Details</a>

				@*@Html.ActionLink("Edit", "Edit", new { id = product.Id })*@
				<a asp-action="Edit" asp-route-id="@product.Id">Edit</a>

				<a asp-action="Delete" asp-route-id="@product.Id">Delete</a>
			</td>
		</tr>
	}
</table>